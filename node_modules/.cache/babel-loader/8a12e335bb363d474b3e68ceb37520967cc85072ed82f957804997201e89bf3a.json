{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\portfol\\\\portfol\\\\src\\\\Pages\\\\AAimGame.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PointGame = () => {\n  _s();\n  const [points, setPoints] = useState([{\n    x: 150,\n    y: 150\n  }]);\n\n  // Функция для генерации случайных координат в пределах поля\n  const getRandomPosition = () => {\n    const x = Math.floor(Math.random() * 390); // Ширина поля (400px - размер точки 10px)\n    const y = Math.floor(Math.random() * 390); // Высота поля (400px - размер точки 10px)\n    return {\n      x,\n      y\n    };\n  };\n\n  // Обработчик клика по точке\n  const handleClick = e => {\n    const {\n      offsetX,\n      offsetY\n    } = e.nativeEvent;\n    const tolerance = 5; // Радиус, с которым можно попасть по центру точки\n    const newPoints = [...points];\n\n    // Проверяем, попали ли в центр одной из существующих точек\n    for (let i = 0; i < points.length; i++) {\n      const point = points[i];\n      const pointCenterX = point.x + 5; // Центр точки по оси X (5px = половина ширины точки)\n      const pointCenterY = point.y + 5; // Центр точки по оси Y (5px = половина высоты точки)\n\n      // Проверяем, что клик попал в центр точки\n      if (Math.abs(offsetX - pointCenterX) < tolerance && Math.abs(offsetY - pointCenterY) < tolerance) {\n        // Удаляем старую точку и добавляем новую\n        newPoints.splice(i, 1, getRandomPosition()); // Заменяем старую точку на новую\n        setPoints(newPoints);\n        break; // Прерываем цикл после нахождения точки\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      height: '100vh' // Полная высота экрана\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '400px',\n        height: '400px',\n        border: '1px solid black',\n        position: 'relative'\n      },\n      onClick: handleClick,\n      children: points.map((point, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'absolute',\n          top: point.y,\n          left: point.x,\n          width: '10px',\n          height: '10px',\n          borderRadius: '50%',\n          backgroundColor: 'red',\n          cursor: 'pointer'\n        }\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(PointGame, \"AYtulvx0OhDNc4doSWmmLTlEMG4=\");\n_c = PointGame;\nexport default PointGame;\nvar _c;\n$RefreshReg$(_c, \"PointGame\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","PointGame","_s","points","setPoints","x","y","getRandomPosition","Math","floor","random","handleClick","e","offsetX","offsetY","nativeEvent","tolerance","newPoints","i","length","point","pointCenterX","pointCenterY","abs","splice","style","display","justifyContent","alignItems","height","children","width","border","position","onClick","map","index","top","left","borderRadius","backgroundColor","cursor","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/portfol/portfol/src/Pages/AAimGame.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst PointGame = () => {\r\n  const [points, setPoints] = useState([{ x: 150, y: 150 }]);\r\n\r\n  // Функция для генерации случайных координат в пределах поля\r\n  const getRandomPosition = () => {\r\n    const x = Math.floor(Math.random() * 390); // Ширина поля (400px - размер точки 10px)\r\n    const y = Math.floor(Math.random() * 390); // Высота поля (400px - размер точки 10px)\r\n    return { x, y };\r\n  };\r\n\r\n  // Обработчик клика по точке\r\n  const handleClick = (e) => {\r\n    const { offsetX, offsetY } = e.nativeEvent;\r\n    const tolerance = 5; // Радиус, с которым можно попасть по центру точки\r\n    const newPoints = [...points];\r\n\r\n    // Проверяем, попали ли в центр одной из существующих точек\r\n    for (let i = 0; i < points.length; i++) {\r\n      const point = points[i];\r\n      const pointCenterX = point.x + 5; // Центр точки по оси X (5px = половина ширины точки)\r\n      const pointCenterY = point.y + 5; // Центр точки по оси Y (5px = половина высоты точки)\r\n\r\n      // Проверяем, что клик попал в центр точки\r\n      if (\r\n        Math.abs(offsetX - pointCenterX) < tolerance &&\r\n        Math.abs(offsetY - pointCenterY) < tolerance\r\n      ) {\r\n        // Удаляем старую точку и добавляем новую\r\n        newPoints.splice(i, 1, getRandomPosition()); // Заменяем старую точку на новую\r\n        setPoints(newPoints);\r\n        break; // Прерываем цикл после нахождения точки\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        height: '100vh', // Полная высота экрана\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          width: '400px',\r\n          height: '400px',\r\n          border: '1px solid black',\r\n          position: 'relative',\r\n        }}\r\n        onClick={handleClick}\r\n      >\r\n        {points.map((point, index) => (\r\n          <div\r\n            key={index}\r\n            style={{\r\n              position: 'absolute',\r\n              top: point.y,\r\n              left: point.x,\r\n              width: '10px',\r\n              height: '10px',\r\n              borderRadius: '50%',\r\n              backgroundColor: 'red',\r\n              cursor: 'pointer',\r\n            }}\r\n          ></div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PointGame;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}