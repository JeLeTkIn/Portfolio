{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\portfol\\\\portfol\\\\src\\\\Pages\\\\AimGame.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PointGame = () => {\n  _s();\n  const [points, setPoints] = useState([{\n    x: 100,\n    y: 100\n  }]);\n\n  // Функция для генерации случайных координат в пределах поля\n  const getRandomPosition = () => {\n    const x = Math.floor(Math.random() * 400); // Ширина поля (400px)\n    const y = Math.floor(Math.random() * 400); // Высота поля (400px)\n    return {\n      x,\n      y\n    };\n  };\n\n  // Обработчик клика по кнопке\n  const handleClick = () => {\n    setPoints([...points, getRandomPosition()]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '400px',\n        height: '400px',\n        border: '1px solid black',\n        position: 'relative',\n        marginBottom: '20px'\n      },\n      children: points.map((point, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'absolute',\n          top: point.y,\n          left: point.x,\n          width: '10px',\n          height: '10px',\n          borderRadius: '50%',\n          backgroundColor: 'red'\n        }\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      children: \"\\u041F\\u043E\\u044F\\u0432\\u0438\\u0442\\u044C \\u0442\\u043E\\u0447\\u043A\\u0443\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(PointGame, \"tZlnOMCE9jzg8egJJapACjCOl6g=\");\n_c = PointGame;\nexport default PointGame;\nvar _c;\n$RefreshReg$(_c, \"PointGame\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","PointGame","_s","points","setPoints","x","y","getRandomPosition","Math","floor","random","handleClick","style","display","flexDirection","alignItems","children","width","height","border","position","marginBottom","map","point","index","top","left","borderRadius","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/portfol/portfol/src/Pages/AimGame.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst PointGame = () => {\r\n  const [points, setPoints] = useState([{ x: 100, y: 100 }]);\r\n\r\n  // Функция для генерации случайных координат в пределах поля\r\n  const getRandomPosition = () => {\r\n    const x = Math.floor(Math.random() * 400); // Ширина поля (400px)\r\n    const y = Math.floor(Math.random() * 400); // Высота поля (400px)\r\n    return { x, y };\r\n  };\r\n\r\n  // Обработчик клика по кнопке\r\n  const handleClick = () => {\r\n    setPoints([...points, getRandomPosition()]);\r\n  };\r\n\r\n  return (\r\n    <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\r\n      <div\r\n        style={{\r\n          width: '400px',\r\n          height: '400px',\r\n          border: '1px solid black',\r\n          position: 'relative',\r\n          marginBottom: '20px',\r\n        }}\r\n      >\r\n        {points.map((point, index) => (\r\n          <div\r\n            key={index}\r\n            style={{\r\n              position: 'absolute',\r\n              top: point.y,\r\n              left: point.x,\r\n              width: '10px',\r\n              height: '10px',\r\n              borderRadius: '50%',\r\n              backgroundColor: 'red',\r\n            }}\r\n          ></div>\r\n        ))}\r\n      </div>\r\n      <button onClick={handleClick}>Появить точку</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PointGame;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAC,CAAC;IAAEO,CAAC,EAAE,GAAG;IAAEC,CAAC,EAAE;EAAI,CAAC,CAAC,CAAC;;EAE1D;EACA,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,MAAMF,CAAC,GAAGG,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;IAC3C,MAAMJ,CAAC,GAAGE,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;IAC3C,OAAO;MAAEL,CAAC;MAAEC;IAAE,CAAC;EACjB,CAAC;;EAED;EACA,MAAMK,WAAW,GAAGA,CAAA,KAAM;IACxBP,SAAS,CAAC,CAAC,GAAGD,MAAM,EAAEI,iBAAiB,CAAC,CAAC,CAAC,CAAC;EAC7C,CAAC;EAED,oBACEP,OAAA;IAAKY,KAAK,EAAE;MAAEC,OAAO,EAAE,MAAM;MAAEC,aAAa,EAAE,QAAQ;MAAEC,UAAU,EAAE;IAAS,CAAE;IAAAC,QAAA,gBAC7EhB,OAAA;MACEY,KAAK,EAAE;QACLK,KAAK,EAAE,OAAO;QACdC,MAAM,EAAE,OAAO;QACfC,MAAM,EAAE,iBAAiB;QACzBC,QAAQ,EAAE,UAAU;QACpBC,YAAY,EAAE;MAChB,CAAE;MAAAL,QAAA,EAEDb,MAAM,CAACmB,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBACvBxB,OAAA;QAEEY,KAAK,EAAE;UACLQ,QAAQ,EAAE,UAAU;UACpBK,GAAG,EAAEF,KAAK,CAACjB,CAAC;UACZoB,IAAI,EAAEH,KAAK,CAAClB,CAAC;UACbY,KAAK,EAAE,MAAM;UACbC,MAAM,EAAE,MAAM;UACdS,YAAY,EAAE,KAAK;UACnBC,eAAe,EAAE;QACnB;MAAE,GATGJ,KAAK;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAUN,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNhC,OAAA;MAAQiC,OAAO,EAAEtB,WAAY;MAAAK,QAAA,EAAC;IAAa;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjD,CAAC;AAEV,CAAC;AAAC9B,EAAA,CA5CID,SAAS;AAAAiC,EAAA,GAATjC,SAAS;AA8Cf,eAAeA,SAAS;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}