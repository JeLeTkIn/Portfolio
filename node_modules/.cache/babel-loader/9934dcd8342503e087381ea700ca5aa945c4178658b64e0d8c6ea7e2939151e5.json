{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\portfol\\\\portfol\\\\src\\\\Pages\\\\AimGame.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PointGame = () => {\n  _s();\n  const [points, setPoints] = useState([{\n    x: 100,\n    y: 100\n  }]);\n\n  // Функция для генерации случайных координат в пределах поля\n  const getRandomPosition = () => {\n    const x = Math.floor(Math.random() * 400); // Ширина поля (400px)\n    const y = Math.floor(Math.random() * 400); // Высота поля (400px)\n    return {\n      x,\n      y\n    };\n  };\n\n  // Обработчик клика по точке\n  const handleClick = e => {\n    const {\n      offsetX,\n      offsetY\n    } = e.nativeEvent;\n    const tolerance = 10; // Радиус точки, в который можно кликнуть\n    const newPoints = [...points];\n\n    // Проверяем, попали ли в одну из существующих точек\n    for (let i = 0; i < points.length; i++) {\n      const point = points[i];\n      if (Math.abs(offsetX - point.x) < tolerance && Math.abs(offsetY - point.y) < tolerance) {\n        // Удаляем старую точку и добавляем новую\n        newPoints.splice(i, 1, getRandomPosition()); // Заменяем старую точку на новую\n        setPoints(newPoints);\n        break; // Прерываем цикл после нахождения точки\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '400px',\n      height: '400px',\n      border: '1px solid black',\n      position: 'relative'\n    },\n    onClick: handleClick,\n    children: points.map((point, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        top: point.y,\n        left: point.x,\n        width: '10px',\n        height: '10px',\n        borderRadius: '50%',\n        backgroundColor: 'red',\n        cursor: 'pointer'\n      }\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(PointGame, \"tZlnOMCE9jzg8egJJapACjCOl6g=\");\n_c = PointGame;\nexport default PointGame;\nvar _c;\n$RefreshReg$(_c, \"PointGame\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","PointGame","_s","points","setPoints","x","y","getRandomPosition","Math","floor","random","handleClick","e","offsetX","offsetY","nativeEvent","tolerance","newPoints","i","length","point","abs","splice","style","width","height","border","position","onClick","children","map","index","top","left","borderRadius","backgroundColor","cursor","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/portfol/portfol/src/Pages/AimGame.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst PointGame = () => {\r\n  const [points, setPoints] = useState([{ x: 100, y: 100 }]);\r\n\r\n  // Функция для генерации случайных координат в пределах поля\r\n  const getRandomPosition = () => {\r\n    const x = Math.floor(Math.random() * 400); // Ширина поля (400px)\r\n    const y = Math.floor(Math.random() * 400); // Высота поля (400px)\r\n    return { x, y };\r\n  };\r\n\r\n  // Обработчик клика по точке\r\n  const handleClick = (e) => {\r\n    const { offsetX, offsetY } = e.nativeEvent;\r\n\r\n    const tolerance = 10; // Радиус точки, в который можно кликнуть\r\n    const newPoints = [...points];\r\n\r\n    // Проверяем, попали ли в одну из существующих точек\r\n    for (let i = 0; i < points.length; i++) {\r\n      const point = points[i];\r\n      if (\r\n        Math.abs(offsetX - point.x) < tolerance &&\r\n        Math.abs(offsetY - point.y) < tolerance\r\n      ) {\r\n        // Удаляем старую точку и добавляем новую\r\n        newPoints.splice(i, 1, getRandomPosition()); // Заменяем старую точку на новую\r\n        setPoints(newPoints);\r\n        break; // Прерываем цикл после нахождения точки\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        width: '400px',\r\n        height: '400px',\r\n        border: '1px solid black',\r\n        position: 'relative',\r\n      }}\r\n      onClick={handleClick}\r\n    >\r\n      {points.map((point, index) => (\r\n        <div\r\n          key={index}\r\n          style={{\r\n            position: 'absolute',\r\n            top: point.y,\r\n            left: point.x,\r\n            width: '10px',\r\n            height: '10px',\r\n            borderRadius: '50%',\r\n            backgroundColor: 'red',\r\n            cursor: 'pointer',\r\n          }}\r\n        ></div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PointGame;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAC,CAAC;IAAEO,CAAC,EAAE,GAAG;IAAEC,CAAC,EAAE;EAAI,CAAC,CAAC,CAAC;;EAE1D;EACA,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,MAAMF,CAAC,GAAGG,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;IAC3C,MAAMJ,CAAC,GAAGE,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;IAC3C,OAAO;MAAEL,CAAC;MAAEC;IAAE,CAAC;EACjB,CAAC;;EAED;EACA,MAAMK,WAAW,GAAIC,CAAC,IAAK;IACzB,MAAM;MAAEC,OAAO;MAAEC;IAAQ,CAAC,GAAGF,CAAC,CAACG,WAAW;IAE1C,MAAMC,SAAS,GAAG,EAAE,CAAC,CAAC;IACtB,MAAMC,SAAS,GAAG,CAAC,GAAGd,MAAM,CAAC;;IAE7B;IACA,KAAK,IAAIe,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGf,MAAM,CAACgB,MAAM,EAAED,CAAC,EAAE,EAAE;MACtC,MAAME,KAAK,GAAGjB,MAAM,CAACe,CAAC,CAAC;MACvB,IACEV,IAAI,CAACa,GAAG,CAACR,OAAO,GAAGO,KAAK,CAACf,CAAC,CAAC,GAAGW,SAAS,IACvCR,IAAI,CAACa,GAAG,CAACP,OAAO,GAAGM,KAAK,CAACd,CAAC,CAAC,GAAGU,SAAS,EACvC;QACA;QACAC,SAAS,CAACK,MAAM,CAACJ,CAAC,EAAE,CAAC,EAAEX,iBAAiB,CAAC,CAAC,CAAC,CAAC,CAAC;QAC7CH,SAAS,CAACa,SAAS,CAAC;QACpB,MAAM,CAAC;MACT;IACF;EACF,CAAC;EAED,oBACEjB,OAAA;IACEuB,KAAK,EAAE;MACLC,KAAK,EAAE,OAAO;MACdC,MAAM,EAAE,OAAO;MACfC,MAAM,EAAE,iBAAiB;MACzBC,QAAQ,EAAE;IACZ,CAAE;IACFC,OAAO,EAAEjB,WAAY;IAAAkB,QAAA,EAEpB1B,MAAM,CAAC2B,GAAG,CAAC,CAACV,KAAK,EAAEW,KAAK,kBACvB/B,OAAA;MAEEuB,KAAK,EAAE;QACLI,QAAQ,EAAE,UAAU;QACpBK,GAAG,EAAEZ,KAAK,CAACd,CAAC;QACZ2B,IAAI,EAAEb,KAAK,CAACf,CAAC;QACbmB,KAAK,EAAE,MAAM;QACbC,MAAM,EAAE,MAAM;QACdS,YAAY,EAAE,KAAK;QACnBC,eAAe,EAAE,KAAK;QACtBC,MAAM,EAAE;MACV;IAAE,GAVGL,KAAK;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAWN,CACP;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACtC,EAAA,CA3DID,SAAS;AAAAwC,EAAA,GAATxC,SAAS;AA6Df,eAAeA,SAAS;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}