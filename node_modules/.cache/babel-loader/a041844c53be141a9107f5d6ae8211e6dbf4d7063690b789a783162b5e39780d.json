{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\portfol\\\\portfol\\\\src\\\\Pages\\\\AimGame.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PointGame = () => {\n  _s();\n  const [points, setPoints] = useState([{\n    x: 150,\n    y: 150\n  }]);\n\n  // Функция для генерации случайных координат в пределах поля\n  const getRandomPosition = () => {\n    const x = Math.floor(Math.random() * 380); // Ширина поля (400px - размер точки 10px)\n    const y = Math.floor(Math.random() * 380); // Высота поля (400px - размер точки 10px)\n    return {\n      x,\n      y\n    };\n  };\n\n  // Обработчик клика по точке\n  const handleClick = e => {\n    const {\n      offsetX,\n      offsetY\n    } = e.nativeEvent;\n    const tolerance = 10; // Радиус, с которым можно попасть по центру точки\n    const newPoints = [...points];\n\n    // Проверяем, попали ли в центр одной из существующих точек\n    for (let i = 0; i < points.length; i++) {\n      const point = points[i];\n      // Проверяем, что клик попал в центр точки\n      if (Math.abs(offsetX - point.x - 5) < tolerance &&\n      // 5 - радиус точки (10px / 2)\n      Math.abs(offsetY - point.y - 5) < tolerance) {\n        // Удаляем старую точку и добавляем новую\n        newPoints.splice(i, 1, getRandomPosition()); // Заменяем старую точку на новую\n        setPoints(newPoints);\n        break; // Прерываем цикл после нахождения точки\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      height: '100vh',\n      // Полная высота экрана\n      gap: '10px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"AimTrainer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '400px',\n        height: '400px',\n        border: '1px solid black',\n        position: 'relative',\n        backgroundColor: 'white'\n      },\n      onClick: handleClick,\n      children: points.map((point, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'absolute',\n          top: point.y,\n          left: point.x,\n          width: '10px',\n          height: '10px',\n          borderRadius: '50%',\n          backgroundColor: 'red',\n          cursor: 'pointer'\n        }\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(PointGame, \"AYtulvx0OhDNc4doSWmmLTlEMG4=\");\n_c = PointGame;\nexport default PointGame;\nvar _c;\n$RefreshReg$(_c, \"PointGame\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","PointGame","_s","points","setPoints","x","y","getRandomPosition","Math","floor","random","handleClick","e","offsetX","offsetY","nativeEvent","tolerance","newPoints","i","length","point","abs","splice","style","display","justifyContent","alignItems","height","gap","children","fileName","_jsxFileName","lineNumber","columnNumber","width","border","position","backgroundColor","onClick","map","index","top","left","borderRadius","cursor","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/portfol/portfol/src/Pages/AimGame.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst PointGame = () => {\r\n  const [points, setPoints] = useState([{ x: 150, y: 150 }]);\r\n\r\n  // Функция для генерации случайных координат в пределах поля\r\n  const getRandomPosition = () => {\r\n    const x = Math.floor(Math.random() * 380); // Ширина поля (400px - размер точки 10px)\r\n    const y = Math.floor(Math.random() * 380); // Высота поля (400px - размер точки 10px)\r\n    return { x, y };\r\n  };\r\n\r\n  // Обработчик клика по точке\r\n  const handleClick = (e) => {\r\n    const { offsetX, offsetY } = e.nativeEvent;\r\n    const tolerance = 10; // Радиус, с которым можно попасть по центру точки\r\n    const newPoints = [...points];\r\n\r\n    // Проверяем, попали ли в центр одной из существующих точек\r\n    for (let i = 0; i < points.length; i++) {\r\n      const point = points[i];\r\n      // Проверяем, что клик попал в центр точки\r\n      if (\r\n        Math.abs(offsetX - point.x - 5) < tolerance && // 5 - радиус точки (10px / 2)\r\n        Math.abs(offsetY - point.y - 5) < tolerance\r\n      ) {\r\n        // Удаляем старую точку и добавляем новую\r\n        newPoints.splice(i, 1, getRandomPosition()); // Заменяем старую точку на новую\r\n        setPoints(newPoints);\r\n        break; // Прерываем цикл после нахождения точки\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        height: '100vh', // Полная высота экрана\r\n        gap:'10px'\r\n      }}\r\n    >\r\n        <h1>AimTrainer</h1>\r\n      <div\r\n        style={{\r\n          width: '400px',\r\n          height: '400px',\r\n          border: '1px solid black',\r\n          position: 'relative',\r\n          backgroundColor: 'white',\r\n        }}\r\n        onClick={handleClick}\r\n      >\r\n        {points.map((point, index) => (\r\n          <div\r\n            key={index}\r\n            style={{\r\n              position: 'absolute',\r\n              top: point.y,\r\n              left: point.x,\r\n              width: '10px',\r\n              height: '10px',\r\n              borderRadius: '50%',\r\n              backgroundColor: 'red',\r\n              cursor: 'pointer',\r\n            }}\r\n          ></div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PointGame;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}